%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 582.250000 263.250000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.1 (Build 16B2555) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 583 264
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 583 264
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: THSarabunNew
%!FontType1-1.0: THSarabunNew 1.0000.1.0030
14 dict begin/FontName /THSarabunNew def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /G put
dup 34 /B put
dup 35 /Q put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -427 1 index div -421 2 index div 947 3 index div 836 5 -1 roll div]cvx def
/sfnts [<






00>] def
/CharStrings 5 dict dup begin
/.notdef 0 def
/B 1 def
/G 2 def
/Q 3 def
/nonmarkingreturn 4 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-427 -421 947 836}def
/UniqueID 4390734 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C959DCA2B25064CB2EE653C8C5E0D08068DD956094993D87692D1893E77F4618DA0A6A45B4714189C9DA7AF29E6A23D1D32E48F136BB397E2D5A63ED8C88372D63F0ADB7E6CCAB23F305ADDC6B12C231F170DE34EEF2720A17FB04704C7568BC359173EC8A41A29D2C7B5785458B2C8EA8E115C2DBB1D6234C531C1BD54C955BF68150387A6A659DEB657CCA63A1EF6E7B1183214D75178CB9087B867DC2D9514B5D22540A32AABB3B7F210BAA6B841D21D72412B1BE14FBC1641EBFC9791617774CF7D55C903A2914C64DA137016FCD13E589A7831DF8E4BD58D7EA4D3FF7872D52C2EA859896DA33A6F7365E3BEF5EFE2FC71C5D65D0D857B543BAE74DD2F024D86FA408A818542FC3CDD3E8070BE8571C24F26995F4D9086B36AFF49896726DB2B8C2DB0E4C3A0861D3ECAF4E11A3F8B935A456976EC558277E631180A1AFEEF32998DE150B835F82609D60F73F9A525FF36AA979B95A24435A148B1FF9854246C2B64839AC2F252FF463B6626D4BC2197F05AC07625B4FFFE9B649FF0A7D9DACF6B6EA14B3C6CBD382353F4064457265403643DB81A2EDA14F77CB1D524ADBD167C4A1DF93E00ED2F84FC4AF79E75A27741659BF450F42931A0B63FE4B63A7F3D31D95C1ED9C6B66B7DFB3599A7D0980A215FB2918979BBCC876144472858DDCF501CE98E9F922F56C8D52DF33875FBC902E6BA6772759DFCCD9CAFC940A1306D4B581102C9CBCBFE106BD0828468C5CC5E210080F767069B03D345C965BF18
E535917FA65731ABF2A579C45CCE0465EF93ED601549160B3B26DAF0250EFE0CBA76B96BC0409A2A43FEB9B53B8B47CE46893385270A83B80821C2A983A04E74CFF31010185353F244C5FE8D0C13FB0AD6CAB1F32F09E05323626F0B18B06AF829A472DF2C6072DEFB0591F88C638A5E8CB634D26D4EE206E155CF5CEC9C0DCFC4D26CB2F9E3F8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/THSarabunNew cguidfix
/F1.1/THSarabunNew renmfont
%RBIBeginFontSubset: THSarabunNew-Bold
%!FontType1-1.0: THSarabunNew-Bold 1.0000.1.0030
14 dict begin/FontName /THSarabunNew-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /g put
dup 34 /r put
dup 35 /a put
dup 36 /d put
dup 37 /i put
dup 38 /n put
dup 39 /colon put
dup 40 /s put
dup 41 /c put
dup 42 /o put
dup 43 /e put
dup 44 /t put
dup 45 /Q put
dup 46 /u put
dup 47 /z put
dup 48 /S put
dup 49 /m put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -466 1 index div -457 2 index div 947 3 index div 844 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C0000001E6670676D00000000000000BC00000173676C79660000000000000230000031A86865616400000000000033D80000003668686561000000000000341000000024686D747800000000000034340000004C6C6F63610000000000003480000000286D61787000000000000034A8000000207072657000000000000034C80000008A00140036002A003E002A0000000AFF7100070154000D018F000801E400010000B800002C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800012C2020456944B001602DB800022CB800012A212DB800032C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800042C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800052C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800062C2020456944B001602020457D691844B001602DB800072CB800062A2DB800082C4B20B003265358B0401BB000598A8A20B0032653582321B0808A8A1B8A235920B0032653582321B800C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800092C4B535845441B2121592D0000020035000002850329000300070054B800082FB800092FB80000DCB8000810B80001D0B800012FB8000010B900040004F4B8000110B900070004F400B800004558B800002F1BB9000000053E59BB00030002000500042BB8000010B900040002F4303129011121031121110285FDB0025024FDF80329FCF602EBFD1500000000020026FFF70086014D000B001700A9BB00000003000600042B410500AF000000BF000000025D410300C0000600015DB8000010B8000CD0B8000610B80012D04107003F0018004F0018005F001800035D410500AF001900BF001900025D4107003F0019004F0019005F001900035D00B800004558B800032F1BB9000300053E59BB00150001000F00042BB8000310B900090001F4410700AF000900BF000900CF000900035D410700A0000F00B0000F00C0000F00035D3031371406232226353436333216351406232226353436333216861C14141C1C14141C1C14141C1C14141C27141C1C14141C1CE2141C1C14141C1C00000002001AFFB901F001E5000B001F02AEB800202FB800212FB8000CDCB900000003F4410D00A0000000B0000000C0000000D0000000E0000000F0000000065D410F000000000010000000200000003000000040000000500000006000







1BB9001200053E59410300BA000300015D410300C9000300015DB8002010B900060001F4410300220006000171410300130006000171410700D0000600E0000600F0000600035D410300000006000171410900300006004000060050000600600006000471B8000ED0BA00190020000611123941090095001900A5001900B5001900C5001900045D41030084001900015D30312123353427262322061D012335342322061D01233534273316153E013332173633321615024A3F15182721393F4D223E3F083B070E401F4228354B3B4CBC2E1E21341ED7CD5C3D21CBFA3E1D1116141C38385948000001002A00000175015E0014020AB800152FB800162F4103001F001600015D410B0000001600100016002000160030001600400016000571B80000DCB900010003F4410D00A0000100B0000100C0000100D0000100E0000100F0000100065D410F00000001001000010020000100300001004000010050000100600001000771410300040005000171B8001510B80009D0B800092FB900080003F4410D00AF000800BF000800CF000800DF000800EF000800FF000800065D410F000F0008001F0008002F0008003F0008004F0008005F0008006F0008000771B8000FD0B8000F2F41030029001000017100B800004558B8000C2F1BB9000C00093E59B800004558B800112F1BB9001100093E59B800004558B800002F1BB9000000053E59B800004558B800082F1BB9000800053E59B8001110B900040001F4410300220004000171410500A6000400B6000400025D410700D0000400E0000400F0000400035D4105000000040010000400027141090030000400400004005000040060000400047141030072000700015D4105005400070064000700025D410500A2000700B2000700025D410300B0000700017141030040000700015DBA000F0011000411123941030063000F00015D41030085000F00015D410500A6000F00B6000F00025D41030047000F00017141030076000F00015D410300B4000F00017141030043000F00015D41030052000F00015D4103002B00130001713031212335342322061D0123353427331615363332161501753F5F23433F083B0730444451C1683F1FCBFA3E1D11183254490002001AFFF801820161000B001701A7B800182FB800192FB80000DC410300CC000200015D410300B9000200015D410300B5000400015D410300C4000400015DB8001810B80006D0B800062F410300B5000800015D410300C4000800015D410300CB000A00015D410300B9000A00015DB8000010B9000C0003F4410D00A0000C00B0000C00C0000C00D0000C00E0000C00F0000C00065D410F0000000C0010000C0020000C0030000C0040000C0050000C0060000C000771B8000610B900120003F4410D00AF001200BF001200CF0012





00>] def
/CharStrings 19 dict dup begin
/.notdef 0 def
/colon 1 def
/Q 2 def
/S 3 def
/a 4 def
/c 5 def
/d 6 def
/e 7 def
/g 8 def
/i 9 def
/m 10 def
/n 11 def
/o 12 def
/r 13 def
/s 14 def
/t 15 def
/u 16 def
/z 17 def
/nonmarkingreturn 18 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-466 -457 947 844}def
/UniqueID 4138507 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91BD326F6E6A1837BE2706B92FCAA32341FE90C82594E2DAAEF640CEE11C999870F0C5EF3819F8D4E6BF45BD9D11684B7B4C0DEA4DA2CEB6CF67EA59E5A3893D151F4970471907C747FB2F9A92D1DDD4B48843F5D7A7243CA2D7AC7C181852B74317FDABFD2F51EB8C8EFAE8A2DEB3007FCF68111655D7CDCC195C93061F7F438C0CF47DD6EB2EE6783F0806D98B96E1A2D8EAC8BD27AAE8F10AB4057B2CDAA84DF47FD9E7BCAA12BC81D8C0CC141FE0204A92F1CCA72559FBAB0A543391E157C331DEC6D994DA926689441D44676427B0B6CB3D9DF83965ED4194AAEB9AB6BBD52E7E4D4056D02CC058ACA37E88D208B45EBDC5FFD9999CEC1827454265C5C416974A917E803114F3CC9C87D3D6E0B34CC092F71FDB5E02ED7329EAABF797C77260B91211FA99B5A04F8E138EF007FA2110C9DD8681E2C2AAA1083FFF6AF41BF0338700A32E7BD3110CF8A18323EB13CB2156AA999DD0704CBA9961C312E571EAAF955D0B5441678D49ED4883AD4EBAC786A99A13C3BB8C795042268767EEA9A8ECA099A9812247F7E3513CD3C69285F457C3D6BA306F186E56F629508E65B524E59213790EB9759D77A165464DEB5C52BA6AC754762B3A0D2D0CDB81B796B5059335E428E4F4F613E4ACC1B7442B46D474EDD4DC156526F912561C661BEE3969E737470608EAA90335D47882ABE593C47A2E3A91168B72FC49FAD256BD0F08FC890DB22B005156E0CE453DE295CDE74B67C6A11064D463AC519399806A5E284B
425259853E5327C33E3E820C54B441C780C82BB7B37B92024DE13C9A380D5EF40A1EA6F8DA5D8AB17D2D16846D7A66BBEBA2AD458FCD6007FC833670C0D8EB3D9D6814E4D60CA4E1CE67A889912B08A59FDFE57F1711B18FF5335AF0C6246FDB69C5E9405974DF36B9D2CD8E4F5DD537F1C161E7B9D2A3353106D2B57593077F91854FA3D8864FD6757108E4B26BAD3383C8C36BF2FB843C610A378EE360959B43C2B2611A6AA38572649BD70BC89B0123633483F715CF5A4EA0D4B8C5431A56B8F083FEECAE4A10D65AA9B0EF784E3543E30CFBB6F0020A96AC4F1053758FA5C4478B8D860981223B179B0406B8ABA32C439C01BF74ADF3889768E0EAF7D74EB1CDC2DB390FCAAFD28E61FDD29E177C31A66A3F5F8A851BD4D86D4EC159555633C43FF009C5F75A495E2484BA470D4DC2187AC6D677EC739678F7DB498EEF4CEB8FCD54E9DF04315CDBCB02B12FB8E192553FAD788D5A7DCBAC0877255BC281C7874781FE3272525966EA80F8254FDA16895F7B378D61C0CE6737F821B4AF41B565CB9EFBE7EB93F18C7540457DE75F682DE618CC9E1F3B0E38C66269E505C79CF57F6EC46FE94D556794F3F790F9C9F4999811ED4B6363A0E97D1154E3B0C6F459D9A7BFA82773986E6F7F5A67B99AABD5713ADE759CFCD7D52E8EEFC8E764783674822E317178B38EA9262C16E3C37C7E64F0DC8ED0BCBDC1AD92DB79BD74CAC536C9880089CFBA52AE3E1FDBF755B6AF47700527450B6168BC35E64A1D450F9F9C7B03955D6BC82BAB22161CF8AD075C12294B576A0B2AA5B557B210E9F8739307E7502BB91F54394A793755996AE13E0674D5F25925BC116595859038F620EB65C06CDDE54173B1A25584FCFA9C8F2E0F0935C3FC9D5B952890B8EA9E0EF939B9AA29A53D66CFB27243DED0C9322C0A6205B4483DB537A635868B3E2B478B335CF93DDECF3DA3F950A375C81619BD68B888E8E0B53E0FB0BF698FD8A8FED38EF9ED2403D2086CD4F322F4A7B725EA598C06D69E7BED596CFBA93A740EA4C51218498DFF2A68906F9AADC8669DE3651D20D02DA98089E2FC0BB46BB23AFBF9B9488FF5459D55474AF3BD8F0722B7A3B14D95D179686DF930AB6500B3A811701F40819DC676320AB73011E751E8FF4E39989CDEEACA6FF2C394D006B0F628090CA6C61C3DCEE6C4FAAE46B3DA91C9D8507C32B7532DAC354019CABED2A0AEC2C69F80DA174FD558960857998680E45E600869D043A998A9B801C556419D9065021F3EDAC1F21A46CAA3EB9102A1AAB62CC4DEBA2D1A4C6A69598BE9A9604A0C4653D1C60BE65BB7DD1ABA31C7A373E0231F5E4AA4A201E2D7F529F565EC9F3831C3E438446D1E2CD3220B3D050FD403AE14FCD47CAC08D6FB6BCB04F85004D53D66D071B29CDAB6691DA487A7A4BFA23647F93341F5698621849ECF95178A
20D51CD2EB8D01FF1D9D9AF2B01D1E93F5F3FECBEC5E0D6B937643FA05FD978747A500E4BB201BFC0A720A17CC86C6A9FDB8951A3585ECEF3C756AE21B63D66CF4FCE76CBF3826484B9E8DD144224A034DD889712127F028E7BD44744C9C612B6DD8AB5ABEE4FD50AD0DC2D6D4B5CA05F68A2D96FE7EAF99D9E07A3E59D2D266E83BF05CC40F263C380B8A5F2C766DAE03709A73B583FA3600DD48733DAEE8FB678AEC56B7231A6C623B40ED38E1AE010E9C74D4C1315A9994A9A6791B4B06672815B848489A0146CECE80D9967D3D65E2F0483B3416ACCC5DF0BC9122FFB83615B8DAF0D5B4CCAF43B2BB610794AE8AA8376F6187D3FB78E50FB61531DCECD06FFC2BC634FC6BA3098DD128BDE7BB883803F63275ED3F4CCAE8FE6B08CBA791F831158DBF2D52B93CF427EBE74E6635A20DA225F19C135B6B61FB5944696FBC01337FACDF491DE671716213E6AEA825B6C649C942FFB5930106834EE10335FB29FA14653B3E8E968C64628BBB7B7629A7C50984CEE21FE88545FF087C65FE91D66AFAE9ADA946D18AB8B1347BEC3D822BB12011DAB04217261F48302DD6986A7B6383F8DE066A5D5180BF8224A2C06A5CB445719A2A86227FF8FACA34CAB46030FD12577B64F5DB89F2EE18084ADA48B7E7162D5252F1A6BCB0B6E814A85429D7CDC413A2D2D8232521D5605E3E05711D02DAF40A3112A0AE3CD9F0DDBE558BEB9559C4E40294E720E9BE8BC62C8396B2768BC71468682FF38016552134F97C0D27985AF22A7F806BBA41C8D46E3F06EBB944E661652E08CAB1CF9B5A6327A7CEBCA6F2C31EB67D70522E83AC7128C3CBB97EB589183A199FDCC1905ECD2520F1113D67DACFBCA79721B41D1FC3B0CDC310C2049A61319873375371CCBD1654F5043651B56F1299495BCCCD8098B470F91E1D161DC3A432E2CA18B666C41D86CF15FF0D1EA477E772022281FAB5714305A88CC193EE625DD9A60F0722A416C0D268E4915A84139C7A5E79D3BC6F150F6C665404BD63AA92A93FB9267BE894DBE778188C27A4FFEC3D82A33F589A23B7241BFB99488483F7262EECA4942262C158C51A04964097A51F6F9CB309F8A7E8766E5FD31ACA1FE50B7D8AD87F0927FCD83B0D7C38B4CEA15C489D112D64119826E9B3BB91B3DEE9E4684164AEDFB666AD0396C0C672FAB3C2709B4A0AB0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/THSarabunNew-Bold cguidfix
/F2.1/THSarabunNew-Bold renmfont
%RBIBeginFontSubset: HelveticaNeue-Bold
%!FontType1-1.0: HelveticaNeue-Bold 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /two put
dup 34 /one put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1018 1 index div -481 2 index div 1437 3 index div 1141 5 -1 roll div]cvx def
/sfnts [<

B0406559593A2DB800182C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800192C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB8001A2C2020456944B001602020457D691844B001602DB8001B2CB8001A2A2DB8001C2C4B20B003265358B0401BB000598A8A20B0032653582321B0808A8A1B8A235920B0032653582321B800C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB8001D2C4B535845441B2121592D00020011000301E202BA000300070043B800142BB800082FB800002FB8000810B80006D0B800062FB900020012F4B8000010B900040012F4B80009DC00BB0003000F000500182BBB0004000F000000182B303101211121131121110187FEE801185BFE2F025FFE00025BFD4902B700000001004A0000018802BC000A0023BA0001000900032BB800011000B800002FB800012FBA0007000800032BB800071030312111230E03271533110188710626374525B002BC2836210D016BFE3A000000000100150000021702CA00260093B800282FBA0001000000032BB8000110B8002810B8001DDCB80009DC410500DA000900EA000900025D411B0009000900190009002900090039000900490009005900090069000900790009008900090099000900A9000900B9000900C90009000D5DB8001D10B80014D0B800142FBA00160000001411123900BA0016001300032BB8001610BA0022000600032BB800221030311333343E0233321615140E02070E03152135213E0535342E0223220E0225880B1A2B1F2E3B1D2B34172D513C230202FEB51A4448473822274257303F61402001AF1C392F1D393320322821101F3C475A3D7A24362F303B4C353352381E2B4D670000000001000EFF5C047902F90010002BB800142BBB000B0012000800182BB8000B10B80012DC00B800092FB800002FBB0005000F000E00182B303105090117072132363511331114062321170191FE7D01854EE802BC292873655FFD3FEDA4014C015159BF2D2A01C1FE3F6461C7FFFF0045FF5C04B002F90047000304BE0000C001400000000001000000010000E563F13F5F0F3CF5011903E800000000B643F84C00000000D34D85A2FC06FE1F059D04750001000900020000000000000001000003CFFF27001D05DCFC06FE77059D00010000000000000000000000000000000501F40011022C004A022C001504BE000E04BE004500000038006000E20118012400010000000500960009006D0004000200000000001E00000200042800030001B800142B01BA0004001000162B01BF00110027001F001A0012000C0000001C2B
BF0012002C0025001A0012000C0000001C2BBF00130024001F001A0012000C0000001C2B00BF000E0030002500200017000C0000001C2BBF000F0034002B00200017000C0000001C2BBF0010002A0025001A0012000C0000001C2B00BA00140004001B2BB8000D20457D691844B8000A2B00BA00010002000C2B01BA00030002000C2B01BE00030028002000190012000B00122BBE00040024001D00170011000A00122B00BE00010033002A00210017000E00122BBE0002002A0022001B0013000C00122B00BA0005000400112BB8000020457D691844B800002B00
00>] def
/CharStrings 5 dict dup begin
/.notdef 0 def
/one 1 def
/two 2 def
/uni2B90 3 def
/uni2B91 4 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-1018 -481 1437 1141}def
/UniqueID 4258367 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C959DCA2B25064CB2EE653C8C5E0D08068DD956094993D87692D1893E7882B3267FBEDEB6776297FEA99C681B11228C21FCD8CEF48BA467B0450225729846B0141D233872E403C84738E77CFF2B8DE42824CB447D19FD08BF2BBA3EBCAEBDAAED20AD195AB7300AE163588021DBA9430ABB1A5866130C5A8479EED29451934C98DD6E3D3A82FC42F598C6FC2EDA06544D691B635FD575EE038634C6A08BB49339CB8CB6C988936EC5CD4D1BB76CDB4615C86EBB5BD5458D5F081E673FE197A6D7BF93F31CDEB3CFDE0F042F19439D1AFA3B6432E136B02665245188E15566556052D1B0545F077676649DADC96808938906C1F5C1E46279870F43655F3DC8000DF8F52A01C31D10CDEE3095D3A7E879576F2CA71BDA53BCF88C32D69CB18758D708C806BB5817F55AA4C3B122034819EE29C2E55D192F325148B80549470C02635ABBBDFF3DAFDD8014A80A6B0A8C8051A7277EA8D2B4BE3E77CD746810E9E7DFEAAC1F226833D7186B87194CBAA4D8248C94B1E74B8D91EB98BDF72AFFBA34118A0FBB504F9514A456016A7859229DDC343AEB318613279875893AC6B2E59356683FDC4512670F5EA9E67C56E7776F9927F79DDE24BE814016D4C2477DA35A3631B2BF038840DBD7ED91B8CD8BA5D29FB7DE5206BA1DE378F5346ADF8F38F9AE41D0B120BD7A498B2AC6479037AF670A115EFA78440BB65CABBAE2D343A358E03AD942F8F240C454A9EE6E220E16705F42F4266CD7C9EAA6F88C0B9EC5B447D19E
8084517D54A81134966BD1DB66E44E8519D7D34898CEC89D7385690B60E16CDE5D849ABA7CE82584F19E394024130AF33E2F3E8215B06414E5654798D6DC6012549BAFFB0AFBA5154860DEAC7BAA22AA3B2FD37340D7A3F9B1971EA1C555AFD9ADFC1873730AFD7B552B314E3ADEFFB7FF9FABE50A1989CC61756914037176EB47AE5028B5D4C248440C86C1F27EA0A72718
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Bold cguidfix
/F3.1/HelveticaNeue-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 582.25 263.25 rc
-1985.875 1126.125 m
642.125 1126.125 l
642.125 -2293.875 l
-1985.875 -2293.875 l
h
-1985.875 1126.125 m
f
58.216862 149.21686 m
68.761063 138.67271 68.761063 121.57729 58.216862 111.03313 c
47.672714 100.48894 30.577286 100.48894 20.033138 111.03313 c
9.4889364 121.57729 9.4889364 138.67271 20.033138 149.21686 c
30.577286 159.76106 47.672714 159.76106 58.216862 149.21686 c
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -1985.875 1126.125 cm
2044.0919 976.90814 m
2054.636 987.45227 2054.636 1004.5477 2044.0919 1015.0919 c
2033.5477 1025.6361 2016.4523 1025.6361 2005.9081 1015.0919 c
1995.3639 1004.5477 1995.3639 987.45227 2005.9081 976.90814 c
2016.4523 966.36395 2033.5477 966.36395 2044.0919 976.90814 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 39.125 130.125 cm
/F1.1[ 30 0 0 -30 0 0]sf
-6.375 5.0500183 m
(!)s
/Cs1 SC
1 1 1 sc
CM
310.21686 149.21686 m
320.76108 138.67271 320.76108 121.57729 310.21686 111.03313 c
299.6727 100.48894 282.5773 100.48894 272.03314 111.03313 c
261.48892 121.57729 261.48892 138.67271 272.03314 149.21686 c
282.5773 159.76106 299.6727 159.76106 310.21686 149.21686 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -1985.875 1126.125 cm
2296.0918 976.90814 m
2306.636 987.45227 2306.636 1004.5477 2296.0918 1015.0919 c
2285.5476 1025.6361 2268.4524 1025.6361 2257.9082 1015.0919 c
2247.364 1004.5477 2247.364 987.45227 2257.9082 976.90814 c
2268.4524 966.36395 2285.5476 966.36395 2296.0918 976.90814 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 291.125 130.125 cm
-5.6700001 5.0500183 m
(")s
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -1985.875 1126.125 cm
2052 996 m
2240.1001 996 l
S
0 i
CM
262.22498 130.125 m
254.22499 133.125 l
254.22499 127.125 l
h
262.22498 130.125 m
f
0 J
0 j
1 0 0 -1 -1985.875 1126.125 cm
2248.1001 996 m
2240.1001 993 l
2240.1001 999 l
h
2248.1001 996 m
S
/Cs2 SC
0 sc
1 0 0 -1 165.125 147.125 cm
/F2.1[ 30 0 0 -30 0 0]sf
-62.43 5.0500183 m
(!"#$%&!'\(\)*"+)[ 9.960000 7.380000 11.010000 13.050000 4.890000 12.690000 9.960000 5.160000 8.880000 10.410000 12.360000 7.380000 0.000000 ] xS
1 0 0 -1 471.125 228.125 cm
-90.945 5.0500183 m
(\(\)*"+'!+,-.%/0\)*"+)[ 8.880000 10.410000 12.360000 7.380000 11.730000 5.160000 9.960000 11.730000 7.740000 15.540000 12.540000 4.890000 10.740000 10.950000 10.410000 12.360000 7.380000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -1985.875 1126.125 cm
2292.0647 973.58722 m
2346.2197 907.50726 2448.2742 906.5332 2506.8391 966.56512 c
S
0 i
CM
526.34857 153.64497 m
523.18164 161.58035 l
518.74475 157.54131 l
h
526.34857 153.64497 m
f
0 J
0 j
1 0 0 -1 -1985.875 1126.125 cm
2512.2236 972.48004 m
2509.0566 964.54462 l
2504.6196 968.58368 l
h
2512.2236 972.48004 m
S
1 J
1 j
0.60000002 i
0.64705884 0.64705884 0.64705884 sc
2295.2151 1015.9307 m
2368.0007 1088.0188 2439.9905 1070.5286 2501.6372 1020.7422 c
S
0 i
CM
521.9046 110.50941 m
513.84045 107.68642 l
517.68512 103.08004 l
h
521.9046 110.50941 m
f
0 J
0 j
1 0 0 -1 -1985.875 1126.125 cm
2507.7795 1015.6156 m
2499.7156 1018.4386 l
2503.5601 1023.045 l
h
2507.7795 1015.6156 m
S
1 1 1 sc
CM
562.21686 149.21686 m
572.76105 138.67271 572.76105 121.57729 562.21686 111.03313 c
551.67273 100.48894 534.57727 100.48894 524.03314 111.03313 c
513.48895 121.57729 513.48895 138.67271 524.03314 149.21686 c
534.57727 159.76106 551.67273 159.76106 562.21686 149.21686 c
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -1985.875 1126.125 cm
2548.0918 976.90814 m
2558.636 987.45227 2558.636 1004.5477 2548.0918 1015.0919 c
2537.5476 1025.6361 2520.4524 1025.6361 2509.9082 1015.0919 c
2499.364 1004.5477 2499.364 987.45227 2509.9082 976.90814 c
2520.4524 966.36395 2537.5476 966.36395 2548.0918 976.90814 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 543.125 130.125 cm
/F1.1[ 30 0 0 -30 0 0]sf
-7.3049998 5.0500183 m
(#)s
/Cs1 SC
0.64705884 0.64705884 0.64705884 sc
1 0 0 -1 466.5029 35.322495 cm
/F2.1[ 30 0 0 -30 0 0]sf
-85.815002 5.0500183 m
(\(\)*"+'!+,-.%/0.1)[ 8.880000 10.410000 12.360000 7.380000 11.730000 5.160000 9.960000 11.730000 7.740000 15.540000 12.540000 4.890000 10.740000 10.950000 12.540000 0.000000 ] xS
/Cs2 SC
0 sc
1 0 0 -1 336.1875 199.88426 cm
/F3.1[ 18 0 0 -18 0 0]sf
-5.0040002 6.7389374 m
(!)s
/Cs1 SC
0.64705884 0.64705884 0.64705884 sc
1 0 0 -1 332.33322 63.803097 cm
-5.0040002 6.7389374 m
(")s
/Cs2 SC
0 sc
1 0 0 -1 85.625 149.625 cm
-5.0040002 6.7389374 m
(")s
ep
end
%%Trailer
%%EOF
