%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 438.250000 1095.250000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.1 (Build 16B2555) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 439 1096
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 439 1096
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: THSarabunNew
%!FontType1-1.0: THSarabunNew 1.0000.1.0030
14 dict begin/FontName /THSarabunNew def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /two put
dup 34 /three put
dup 35 /four put
dup 36 /five put
dup 37 /seven put
dup 38 /eight put
dup 39 /nine put
dup 40 /one put
dup 41 /zero put
dup 42 /six put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -427 1 index div -421 2 index div 947 3 index div 836 5 -1 roll div]cvx def
/sfnts [<

















0007008E008100650048002E000000082BBF0008008E0081006A004C002E000000082BBF000900A70081006A004C002E000000082B00BF000100A7008100650048002E000000082BBF000200C500A1007D005A002E000000082BBF000300A70081006A004C002E000000082BBF000400C500A1006A004C002E000000082B00BA000A000500072BB8000020457D691844BA00AF0010000173BA00CF0010000173BA00FF0010000173BA001F0010000174BA004F0010000174
00>] def
/CharStrings 12 dict dup begin
/.notdef 0 def
/zero 1 def
/one 2 def
/two 3 def
/three 4 def
/four 5 def
/five 6 def
/six 7 def
/seven 8 def
/eight 9 def
/nine 10 def
/nonmarkingreturn 11 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-427 -421 947 836}def
/UniqueID 4390734 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91B64DFC330C1264D9E86DB21FFDE360EA73793134E310C35764956599FC7FBA10C28724A1CFA53CD63C345EFA3486D2ED1CBD244A3851560B7877CBBF75BFE8268603ABFBBDDB6DDF7AE56BF68CBCCA4E0D89A7963D127A6FF5901EA63C63B767C661DE6C990A403FF963F223F2AE70DE173F4F97CAE01C94020E569CAD33BCE924D2FCD699A481F276F8A7885BC26D3B01B894C94E0387B7EFD341AECC0E0EFF290283F247CCD33DF493E6550F62A25CE4022357A2654F3D0381BEBA9A60AD39A8ACE6B43B8B3839CDC533C5CFDF263D4883F1F6AC226817C62C97BD290589DF8F4A4B25CDB38C1C475FE0CEB4E5BDD5E61C2DB342EB8F7F8D40CFC49BDB9C77825B92161719A1AEE59E258A2757E1CE8B3BC534AB9EE67AA7DA34C3C6EBFFF3B2C79023BD472E52F0B03EB7ACB14388002C7EB081565660454A84094A04E5F40D11576022A51E8283ACA4382CA25313431CB72D2E961158F1E5733F6ABFE90D7C7D6417DB20275D67E1C063E862CCEACA5234C863C17208ADF48E6BA80D17E2E6411FD693E92219314D873B6E6A41FF87412DC4E442E74CA2C978D6F7611B49DFD2CEB8C3096CE0633711F366D72FDD13A5DA3F4E21F5985A96800B438B48485E5B0F7B8137C28EC670D9CA2C87FC0A33F6236AEA04596DD85CAB7AA7A06061E1E4614C4CF007E546C08F554683B933380EC5373A71E23DB7A534A9742C4176CE1216FF0BA2C6CE1E5BCAE8E7AB9F6BDE2DC7AD685423DE7CA0993065493A61

377EC4F17D7F7448948C488539830873961248B045A9EABB06832BB6866719F75F583ACB850142F8F3FFD8FDBD8235AB20EC34A11C9ABDF9D3A79BE2F7AC974B23E098B41CA53FAA64FD02B16A17BE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/THSarabunNew cguidfix
/F1.1/THSarabunNew renmfont
%RBIBeginFontSubset: THSarabunNew-Bold
%!FontType1-1.0: THSarabunNew-Bold 1.0000.1.0030
14 dict begin/FontName /THSarabunNew-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /T put
dup 34 /F put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -466 1 index div -457 2 index div 947 3 index div 844 5 -1 roll div]cvx def
/sfnts [<


00>] def
/CharStrings 4 dict dup begin
/.notdef 0 def
/F 1 def
/T 2 def
/nonmarkingreturn 3 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-466 -457 947 844}def
/UniqueID 4138507 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C94CF017316529A80F552C33559AB2C21302561FE61E935C1E32B3C9EA6F7BA88670566B23508DFEE933F5B8A4ACBAB9EA02D3D4091AFB551AB3CBB7906F78D486DA380F138B12BD92EB72B5E16D2CB7F65FED95C9353FDF221B3B7432927A2CF2194879548B2EB1A5B93A04235AF4C3410C6E7FD1B6AA31C802CC78AD635C17AB5F90603EED7193F90D4E05B82BD60687CE55027154C89E0266603AA74035AB1510487B3FC1AB17EA47EEBAB65B1CD7E273DDDF8358386DC2F850454363E6E23F961857F8F280FE1FC2BB8B94D3A72BC762906DD9275D02ED268CCE18900AF8AEB8C9381D5BC9710C4EA6345E4F2FF6009EC6EB56CA32B329AE0B52EBB2B954377DA8AEB1A2BC9365D6044F0B1EEC6D9C1FB76EEFCFFB4E5075FA3D425B6E6662FA850880BB6B8F3C7C4500152420A378B4F973492C9F5B7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/THSarabunNew-Bold cguidfix
/F2.1/THSarabunNew-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 438.25 1095.25 rc
-446.875 1821.125 m
660.125 1821.125 l
660.125 -95.875 l
-446.875 -95.875 l
h
-446.875 1821.125 m
f
58.216862 1075.2169 m
68.761063 1064.6727 68.761063 1047.5773 58.216862 1037.0331 c
47.672714 1026.4889 30.577286 1026.4889 20.033138 1037.0331 c
9.4889364 1047.5773 9.4889364 1064.6727 20.033138 1075.2169 c
30.577286 1085.7611 47.672714 1085.7611 58.216862 1075.2169 c
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -446.875 1821.125 cm
505.09186 745.90814 m
515.63605 756.45227 515.63605 773.54773 505.09186 784.09186 c
494.5477 794.63605 477.4523 794.63605 466.90814 784.09186 c
456.36392 773.54773 456.36392 756.45227 466.90814 745.90814 c
477.4523 735.36395 494.5477 735.36395 505.09186 745.90814 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 39.125 1056.125 cm
/F1.1[ 30 0 0 -30 0 0]sf
-5.4299998 5.0500183 m
(!)s
/Cs1 SC
1 1 1 sc
CM
238.21686 1075.2169 m
248.76106 1064.6727 248.76106 1047.5773 238.21686 1037.0331 c
227.67271 1026.4889 210.57729 1026.4889 200.03314 1037.0331 c
189.48894 1047.5773 189.48894 1064.6727 200.03314 1075.2169 c
210.57729 1085.7611 227.67271 1085.7611 238.21686 1075.2169 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -446.875 1821.125 cm
685.09186 745.90814 m
695.63605 756.45227 695.63605 773.54773 685.09186 784.09186 c
674.54773 794.63605 657.45227 794.63605 646.90814 784.09186 c
636.36395 773.54773 636.36395 756.45227 646.90814 745.90814 c
657.45227 735.36395 674.54773 735.36395 685.09186 745.90814 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 219.125 1056.125 cm
-5.4299998 5.0500183 m
(")s
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -446.875 1821.125 cm
513 765 m
629.09998 765 l
S
0 i
CM
190.22499 1056.125 m
182.22499 1059.125 l
182.22499 1053.125 l
h
190.22499 1056.125 m
f
0 J
0 j
1 0 0 -1 -446.875 1821.125 cm
637.09998 765 m
629.09998 762 l
629.09998 768 l
h
637.09998 765 m
S
1 1 1 sc
CM
148.21686 976.21686 m
158.76106 965.67273 158.76106 948.57727 148.21686 938.03314 c
137.67271 927.48895 120.57729 927.48895 110.03313 938.03314 c
99.488937 948.57727 99.488937 965.67273 110.03313 976.21686 c
120.57729 986.76105 137.67271 986.76105 148.21686 976.21686 c
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -446.875 1821.125 cm
595.09186 844.90814 m
605.63605 855.45227 605.63605 872.54773 595.09186 883.09186 c
584.54773 893.63605 567.45227 893.63605 556.90814 883.09186 c
546.36395 872.54773 546.36395 855.45227 556.90814 844.90814 c
567.45227 834.36395 584.54773 834.36395 595.09186 844.90814 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 129.125 957.125 cm
-5.4299998 5.0500183 m
(#)s
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -446.875 1821.125 cm
647.83746 784.97876 m
594.16254 844.02124 l
S
0 i
1 1 1 sc
CM
58.216862 877.21686 m
68.761063 866.67273 68.761063 849.57727 58.216862 839.03314 c
47.672714 828.48895 30.577286 828.48895 20.033138 839.03314 c
9.4889364 849.57727 9.4889364 866.67273 20.033138 877.21686 c
30.577286 887.76105 47.672714 887.76105 58.216862 877.21686 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -446.875 1821.125 cm
505.09186 943.90814 m
515.63605 954.45227 515.63605 971.54773 505.09186 982.09186 c
494.5477 992.63605 477.4523 992.63605 466.90814 982.09186 c
456.36392 971.54773 456.36392 954.45227 466.90814 943.90814 c
477.4523 933.36395 494.5477 933.36395 505.09186 943.90814 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 39.125 858.125 cm
-5.4299998 5.0500183 m
($)s
/Cs1 SC
1 1 1 sc
CM
238.21686 877.21686 m
248.76106 866.67273 248.76106 849.57727 238.21686 839.03314 c
227.67271 828.48895 210.57729 828.48895 200.03314 839.03314 c
189.48894 849.57727 189.48894 866.67273 200.03314 877.21686 c
210.57729 887.76105 227.67271 887.76105 238.21686 877.21686 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -446.875 1821.125 cm
685.09186 943.90814 m
695.63605 954.45227 695.63605 971.54773 685.09186 982.09186 c
674.54773 992.63605 657.45227 992.63605 646.90814 982.09186 c
636.36395 971.54773 636.36395 954.45227 646.90814 943.90814 c
657.45227 933.36395 674.54773 933.36395 685.09186 943.90814 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 219.125 858.125 cm
-5.4299998 5.0500183 m
(%)s
/Cs1 SC
1 1 1 sc
CM
148.21686 778.21686 m
158.76106 767.67273 158.76106 750.57727 148.21686 740.03314 c
137.67271 729.48895 120.57729 729.48895 110.03313 740.03314 c
99.488937 750.57727 99.488937 767.67273 110.03313 778.21686 c
120.57729 788.76105 137.67271 788.76105 148.21686 778.21686 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -446.875 1821.125 cm
595.09186 1042.9081 m
605.63605 1053.4523 605.63605 1070.5477 595.09186 1081.0919 c
584.54773 1091.6361 567.45227 1091.6361 556.90814 1081.0919 c
546.36395 1070.5477 546.36395 1053.4523 556.90814 1042.9081 c
567.45227 1032.3639 584.54773 1032.3639 595.09186 1042.9081 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 129.125 759.125 cm
-5.4299998 5.0500183 m
(&)s
/Cs1 SC
1 1 1 sc
CM
148.21686 679.21686 m
158.76106 668.67273 158.76106 651.57727 148.21686 641.03314 c
137.67271 630.48895 120.57729 630.48895 110.03313 641.03314 c
99.488937 651.57727 99.488937 668.67273 110.03313 679.21686 c
120.57729 689.76105 137.67271 689.76105 148.21686 679.21686 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -446.875 1821.125 cm
595.09186 1141.9081 m
605.63605 1152.4523 605.63605 1169.5477 595.09186 1180.0919 c
584.54773 1190.6361 567.45227 1190.6361 556.90814 1180.0919 c
546.36395 1169.5477 546.36395 1152.4523 556.90814 1141.9081 c
567.45227 1131.3639 584.54773 1131.3639 595.09186 1141.9081 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 129.125 660.125 cm
-5.4299998 5.0500183 m
(')s
/Cs1 SC
1 1 1 sc
CM
148.21686 580.21686 m
158.76106 569.67273 158.76106 552.57727 148.21686 542.03314 c
137.67271 531.48895 120.57729 531.48895 110.03313 542.03314 c
99.488937 552.57727 99.488937 569.67273 110.03313 580.21686 c
120.57729 590.76105 137.67271 590.76105 148.21686 580.21686 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -446.875 1821.125 cm
595.09186 1240.9081 m
605.63605 1251.4523 605.63605 1268.5477 595.09186 1279.0919 c
584.54773 1289.6361 567.45227 1289.6361 556.90814 1279.0919 c
546.36395 1268.5477 546.36395 1251.4523 556.90814 1240.9081 c
567.45227 1230.3639 584.54773 1230.3639 595.09186 1240.9081 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 129.125 561.125 cm
-10.86 5.0500183 m
(\(\))[ 10.860000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
238.21686 481.21686 m
248.76106 470.6727 248.76106 453.5773 238.21686 443.03314 c
227.67271 432.48892 210.57729 432.48892 200.03314 443.03314 c
189.48894 453.5773 189.48894 470.6727 200.03314 481.21686 c
210.57729 491.76108 227.67271 491.76108 238.21686 481.21686 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -446.875 1821.125 cm
685.09186 1339.9081 m
695.63605 1350.4523 695.63605 1367.5477 685.09186 1378.0919 c
674.54773 1388.6361 657.45227 1388.6361 646.90814 1378.0919 c
636.36395 1367.5477 636.36395 1350.4523 646.90814 1339.9081 c
657.45227 1329.3639 674.54773 1329.3639 685.09186 1339.9081 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 219.125 462.125 cm
-10.86 5.0500183 m
(\(!)[ 10.860000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
58.216862 481.21686 m
68.761063 470.6727 68.761063 453.5773 58.216862 443.03314 c
47.672714 432.48892 30.577286 432.48892 20.033138 443.03314 c
9.4889364 453.5773 9.4889364 470.6727 20.033138 481.21686 c
30.577286 491.76108 47.672714 491.76108 58.216862 481.21686 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -446.875 1821.125 cm
505.09186 1339.9081 m
515.63605 1350.4523 515.63605 1367.5477 505.09186 1378.0919 c
494.5477 1388.6361 477.4523 1388.6361 466.90814 1378.0919 c
456.36392 1367.5477 456.36392 1350.4523 466.90814 1339.9081 c
477.4523 1329.3639 494.5477 1329.3639 505.09186 1339.9081 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 39.125 462.125 cm
-10.86 5.0500183 m
(\(\()[ 10.860000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
148.21686 382.21686 m
158.76106 371.6727 158.76106 354.5773 148.21686 344.03314 c
137.67271 333.48892 120.57729 333.48892 110.03313 344.03314 c
99.488937 354.5773 99.488937 371.6727 110.03313 382.21686 c
120.57729 392.76108 137.67271 392.76108 148.21686 382.21686 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -446.875 1821.125 cm
595.09186 1438.9081 m
605.63605 1449.4523 605.63605 1466.5477 595.09186 1477.0919 c
584.54773 1487.6361 567.45227 1487.6361 556.90814 1477.0919 c
546.36395 1466.5477 546.36395 1449.4523 556.90814 1438.9081 c
567.45227 1428.3639 584.54773 1428.3639 595.09186 1438.9081 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 129.125 363.125 cm
-10.86 5.0500183 m
(\(")[ 10.860000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
328.21686 382.21686 m
338.76108 371.6727 338.76108 354.5773 328.21686 344.03314 c
317.6727 333.48892 300.5773 333.48892 290.03314 344.03314 c
279.48892 354.5773 279.48892 371.6727 290.03314 382.21686 c
300.5773 392.76108 317.6727 392.76108 328.21686 382.21686 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -446.875 1821.125 cm
775.09186 1438.9081 m
785.63605 1449.4523 785.63605 1466.5477 775.09186 1477.0919 c
764.54773 1487.6361 747.45227 1487.6361 736.90814 1477.0919 c
726.36395 1466.5477 726.36395 1449.4523 736.90814 1438.9081 c
747.45227 1428.3639 764.54773 1428.3639 775.09186 1438.9081 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 309.125 363.125 cm
-10.86 5.0500183 m
(\(#)[ 10.860000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
148.21686 157.21686 m
158.76106 146.67271 158.76106 129.57729 148.21686 119.03313 c
137.67271 108.48894 120.57729 108.48894 110.03313 119.03313 c
99.488937 129.57729 99.488937 146.67271 110.03313 157.21686 c
120.57729 167.76106 137.67271 167.76106 148.21686 157.21686 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -446.875 1821.125 cm
595.09186 1663.9081 m
605.63605 1674.4523 605.63605 1691.5477 595.09186 1702.0919 c
584.54773 1712.6361 567.45227 1712.6361 556.90814 1702.0919 c
546.36395 1691.5477 546.36395 1674.4523 556.90814 1663.9081 c
567.45227 1653.3639 584.54773 1653.3639 595.09186 1663.9081 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 129.125 138.125 cm
-10.86 5.0500183 m
(\(*)[ 10.860000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -446.875 1821.125 cm
557.83746 883.97876 m
510.82199 935.6958 l
S
0 i
CM
58.565598 879.50964 m
66.166801 883.41113 l
61.727161 887.4472 l
h
58.565598 879.50964 m
f
0 J
0 j
1 0 0 -1 -446.875 1821.125 cm
505.44061 941.61536 m
513.04181 937.71387 l
508.60217 933.6778 l
h
505.44061 941.61536 m
S
1 J
1 j
0.60000002 i
594.16254 883.97876 m
641.17804 935.6958 l
S
0 i
CM
199.6844 879.50964 m
196.52284 887.4472 l
192.08319 883.41113 l
h
199.6844 879.50964 m
f
0 J
0 j
1 0 0 -1 -446.875 1821.125 cm
646.55939 941.61536 m
643.39783 933.6778 l
638.95819 937.71387 l
h
646.55939 941.61536 m
S
1 J
1 j
0.60000002 i
504.16251 982.97876 m
551.17804 1034.6958 l
S
0 i
CM
109.6844 780.50964 m
106.52284 788.4472 l
102.0832 784.41113 l
h
109.6844 780.50964 m
f
0 J
0 j
1 0 0 -1 -446.875 1821.125 cm
556.55939 1040.6154 m
553.39783 1032.6779 l
548.95819 1036.7139 l
h
556.55939 1040.6154 m
S
1 J
1 j
0.60000002 i
647.83746 982.97876 m
600.82196 1034.6958 l
S
0 i
CM
148.5656 780.50964 m
156.16681 784.41113 l
151.72716 788.4472 l
h
148.5656 780.50964 m
f
0 J
0 j
1 0 0 -1 -446.875 1821.125 cm
595.44061 1040.6154 m
603.04181 1036.7139 l
598.60217 1032.6779 l
h
595.44061 1040.6154 m
S
1 J
1 j
0.60000002 i
576 1089 m
576 1124.1 l
S
0 i
CM
129.125 689.02502 m
132.125 697.02502 l
126.125 697.02502 l
h
129.125 689.02502 m
f
0 J
0 j
1 0 0 -1 -446.875 1821.125 cm
576 1132.1 m
579 1124.1 l
573 1124.1 l
h
576 1132.1 m
S
1 J
1 j
0.60000002 i
576 1188 m
576 1223.1 l
S
0 i
CM
129.125 590.02502 m
132.125 598.02502 l
126.125 598.02502 l
h
129.125 590.02502 m
f
0 J
0 j
1 0 0 -1 -446.875 1821.125 cm
576 1231.1 m
579 1223.1 l
573 1223.1 l
h
576 1231.1 m
S
1 J
1 j
0.60000002 i
557.83746 1279.9788 m
510.82199 1331.6958 l
S
0 i
CM
58.565598 483.50967 m
66.166801 487.41116 l
61.727161 491.4472 l
h
58.565598 483.50967 m
f
0 J
0 j
1 0 0 -1 -446.875 1821.125 cm
505.44061 1337.6154 m
513.04181 1333.7139 l
508.60217 1329.6779 l
h
505.44061 1337.6154 m
S
1 J
1 j
0.60000002 i
594.16254 1279.9788 m
641.17804 1331.6958 l
S
0 i
CM
199.6844 483.50967 m
196.52284 491.4472 l
192.08319 487.41116 l
h
199.6844 483.50967 m
f
0 J
0 j
1 0 0 -1 -446.875 1821.125 cm
646.55939 1337.6154 m
643.39783 1329.6779 l
638.95819 1333.7139 l
h
646.55939 1337.6154 m
S
1 J
1 j
0.60000002 i
647.83746 1378.9788 m
600.82196 1430.6958 l
S
0 i
CM
148.5656 384.50967 m
156.16681 388.41116 l
151.72716 392.4472 l
h
148.5656 384.50967 m
f
0 J
0 j
1 0 0 -1 -446.875 1821.125 cm
595.44061 1436.6154 m
603.04181 1432.7139 l
598.60217 1428.6779 l
h
595.44061 1436.6154 m
S
1 J
1 j
0.60000002 i
684.16254 1378.9788 m
731.17804 1430.6958 l
S
0 i
CM
289.68439 384.50967 m
286.52283 392.4472 l
282.08319 388.41116 l
h
289.68439 384.50967 m
f
0 J
0 j
1 0 0 -1 -446.875 1821.125 cm
736.55939 1436.6154 m
733.39783 1428.6779 l
728.95819 1432.7139 l
h
736.55939 1436.6154 m
S
1 J
1 j
0.60000002 i
739.13177 1479.0853 m
599.05273 1654.1841 l
S
0 i
CM
147.18015 160.69394 m
154.52031 165.0668 l
149.8351 168.81497 l
h
147.18015 160.69394 m
f
0 J
0 j
1 0 0 -1 -446.875 1821.125 cm
594.05518 1660.431 m
601.39532 1656.0582 l
596.71008 1652.3101 l
h
594.05518 1660.431 m
S
1 J
1 j
0.60000002 i
576 1485 m
576 1646.1 l
S
0 i
CM
129.125 167.02501 m
132.125 175.02501 l
126.125 175.02501 l
h
129.125 167.02501 m
f
0 J
0 j
1 0 0 -1 -446.875 1821.125 cm
576 1654.1 m
579 1646.1 l
573 1646.1 l
h
576 1654.1 m
S
1 1 1 sc
CM
418.21686 283.21686 m
428.76108 272.6727 428.76108 255.57729 418.21686 245.03314 c
407.6727 234.48894 390.5773 234.48894 380.03314 245.03314 c
369.48892 255.57729 369.48892 272.6727 380.03314 283.21686 c
390.5773 293.76108 407.6727 293.76108 418.21686 283.21686 c
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -446.875 1821.125 cm
865.09186 1537.9081 m
875.63605 1548.4523 875.63605 1565.5477 865.09186 1576.0919 c
854.54773 1586.6361 837.45227 1586.6361 826.90814 1576.0919 c
816.36395 1565.5477 816.36395 1548.4523 826.90814 1537.9081 c
837.45227 1527.3639 854.54773 1527.3639 865.09186 1537.9081 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 399.125 264.125 cm
-10.86 5.0500183 m
(\($)[ 10.860000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -446.875 1821.125 cm
774.16254 1477.9788 m
827.83746 1537.0212 l
S
821.52643 1568.421 m
609.44482 1667.3925 l
S
0 i
CM
155.32034 150.3495 m
163.83847 151.01402 l
161.30116 156.45113 l
h
155.32034 150.3495 m
f
0 J
0 j
1 0 0 -1 -446.875 1821.125 cm
602.19537 1670.7755 m
610.71344 1670.111 l
608.17615 1664.6738 l
h
602.19537 1670.7755 m
S
1 J
1 j
0.60000002 i
493.22766 1385.0195 m
566.12268 1647.4417 l
S
0 i
CM
121.38882 165.97523 m
122.13823 174.4863 l
116.35712 172.88043 l
h
121.38882 165.97523 m
f
0 J
0 j
1 0 0 -1 -446.875 1821.125 cm
568.26385 1655.1498 m
569.01324 1646.6387 l
563.23212 1648.2445 l
h
568.26385 1655.1498 m
S
1 1 1 sc
CM
148.21686 58.216862 m
158.76106 47.672714 158.76106 30.577286 148.21686 20.033138 c
137.67271 9.4889364 120.57729 9.4889364 110.03313 20.033138 c
99.488937 30.577286 99.488937 47.672714 110.03313 58.216862 c
120.57729 68.761063 137.67271 68.761063 148.21686 58.216862 c
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -446.875 1821.125 cm
595.09186 1762.9081 m
605.63605 1773.4523 605.63605 1790.5477 595.09186 1801.0919 c
584.54773 1811.6361 567.45227 1811.6361 556.90814 1801.0919 c
546.36395 1790.5477 546.36395 1773.4523 556.90814 1762.9081 c
567.45227 1752.3639 584.54773 1752.3639 595.09186 1762.9081 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 129.125 39.125 cm
-10.86 5.0500183 m
(\(%)[ 10.860000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -446.875 1821.125 cm
576 1710 m
576 1745.1 l
S
0 i
CM
129.125 68.025017 m
132.125 76.025017 l
126.125 76.025017 l
h
129.125 68.025017 m
f
0 J
0 j
1 0 0 -1 -446.875 1821.125 cm
576 1753.1 m
579 1745.1 l
573 1745.1 l
h
576 1753.1 m
S
/Cs2 SC
0 sc
1 0 0 -1 75.625 919.125 cm
/F2.1[ 30 0 0 -30 0 0]sf
-6.3150001 5.0500183 m
(!)s
1 0 0 -1 183.625 918.8941 cm
-5.3699999 5.0500183 m
(")s
1 0 0 -1 75.625 518.125 cm
-6.3150001 5.0500183 m
(!)s
1 0 0 -1 183.625 517.8941 cm
-5.3699999 5.0500183 m
(")s
1 0 0 -1 167.625 419.125 cm
-6.3150001 5.0500183 m
(!)s
1 0 0 -1 275.625 418.8941 cm
-5.3699999 5.0500183 m
(")s
1 0 0 -1 257.625 320.125 cm
-5.3699999 5.0500183 m
(")s
1 0 0 -1 365.625 319.8941 cm
-6.3150001 5.0500183 m
(!)s
ep
end
%%Trailer
%%EOF
